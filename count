        PRESERVE8                ; 8-byte stack alignment
        THUMB                    ; 16-bit Thumb mode

        AREA RESET, CODE, READONLY
        EXPORT __Vectors

__Vectors
        DCD     0x20001000       ; Initial stack pointer
        DCD     START            ; Reset handler

        ALIGN

        AREA MY_CODE, CODE, READONLY
        ENTRY
        EXPORT START

START
        ; Load 8-bit values from memory
        LDR     R0, =MEMORY1
        LDRB    R1, [R0]         ; R1 = 0xB0

        LDR     R0, =MEMORY2
        LDRB    R2, [R0]         ; R2 = 0xED

        ; Initialize counters
        MOV     R3, #0           ; Count of 1s
        MOV     R4, #0           ; Count of 0s

        ; Count bits in R1 (first byte)
        MOV     R5, #8
COUNT_LOOP1
        ANDS    R6, R1, #1       ; Isolate LSB
        ADD     R3, R3, R6       ; Increment 1s count if bit is 1
        EOR     R6, R6, #1
        ADD     R4, R4, R6       ; Increment 0s count if bit is 0
        LSRS    R1, R1, #1       ; Shift right to check next bit
        SUBS    R5, R5, #1
        BNE     COUNT_LOOP1

        ; Count bits in R2 (second byte)
        MOV     R5, #8
COUNT_LOOP2
        ANDS    R6, R2, #1
        ADD     R3, R3, R6
        EOR     R6, R6, #1
        ADD     R4, R4, R6
        LSRS    R2, R2, #1
        SUBS    R5, R5, #1
        BNE     COUNT_LOOP2

        ; Store results
        LDR     R0, =COUNT_ONES
        STR     R3, [R0]

        LDR     R0, =COUNT_ZEROS
        STR     R4, [R0]

STOP
        B       STOP            ; Infinite loop

        ; --- Data Section ---
        AREA MY_DATA, DATA, READWRITE
MEMORY1         DCD     0xB0        ; First 8-bit value
MEMORY2         DCD     0xED        ; Second 8-bit value
COUNT_ONES      DCD     0
COUNT_ZEROS     DCD     0

        END
