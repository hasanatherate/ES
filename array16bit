        PRESERVE8              ; 8-byte stack alignment
        THUMB                  ; Use Thumb (16-bit) mode

        AREA RESET, DATA, READONLY
        EXPORT __Vectors

__Vectors
        DCD     0x20001000     ; Initial Stack Pointer
        DCD     START          ; Reset handler address

        ALIGN

        AREA MY_CODE, CODE, READONLY
        ENTRY
        EXPORT START

START
        LDR     R0, =ARR        ; Base address of the array
        MOV     R1, #0          ; R1: lower 32 bits of sum
        MOV     R2, #0          ; R2: upper 32 bits (carry)

        LDR     R4, =ARR_END    ; Get end address
        SUBS    R4, R4, R0      ; R4 = number of bytes in array
        LSRS    R4, R4, #1      ; Divide by 2 to get number of 16-bit elements

LOOP
        LDRH    R3, [R0], #2    ; Load 16-bit element, increment pointer
        ADDS    R1, R1, R3      ; Add to lower 32-bit sum
        ADC     R2, R2, #0      ; Add carry to upper 32-bit part
        SUBS    R4, R4, #1
        BNE     LOOP            ; Repeat until all elements are added

        ; Store result to memory (0x20000000)
        LDR     R5, =0x20000000
        STR     R1, [R5]        ; Store lower 32 bits
        STR     R2, [R5, #4]    ; Store upper 32 bits

STOP
        B       STOP            ; Infinite loop

        ; --- Data Section ---
        AREA MY_DATA, DATA, READWRITE
ARR     DCW 0x1234, 0x5678, 0x9ABC, 0xDEF0  ; 4 x 16-bit numbers
ARR_END

        END
